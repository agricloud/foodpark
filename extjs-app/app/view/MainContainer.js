/*
 * File: app/view/MainContainer.js
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('foodpark.view.MainContainer', {
    extend: 'Ext.container.Container',
    alias: 'widget.maincontainer',

    requires: [
        'foodpark.view.MainContainerViewModel',
        'foodpark.view.MainContainerViewController',
        'Ext.panel.Panel',
        'Ext.button.Button'
    ],

    controller: 'maincontainer',
    viewModel: {
        type: 'maincontainer'
    },
    reference: 'mainCt',
    height: 650,
    id: 'mainCt',
    layout: 'border',

    initConfig: function(instanceConfig) {
        var me = this,
            config = {
                items: [
                    {
                        xtype: 'panel',
                        region: 'west',
                        split: true,
                        frame: true,
                        id: 'menuPanel',
                        itemId: 'menuPanel',
                        width: 180,
                        layout: 'accordion',
                        collapsible: true,
                        header: false,
                        hideCollapseTool: true,
                        placeholder: {
                            xtype: 'header',
                            width: 8,
                            listeners: {
                                click: {
                                    fn: function(header, e, eOpts){
                                                        header.up().down('panel[itemId=menuPanel]').expand();
                                                    }
                                },
                                //end click
                                mouseover: {
                                    element: 'el',
                                    fn: function(event, el, eOpts){//event, html, eOpts
                                                        var header = Ext.getCmp(this.id);
                                                        header.up().down('panel[itemId=menuPanel]').floatCollapsedPanel();
                                                    }
                                }
                            }
                            //end listener
                        },
                        items: [
                            me.processBasicDataMaintain({
                                xtype: 'panel',
                                height: 250,
                                scrollable: true,
                                width: 400,
                                title: 'Basic Data Maintain',
                                layout: {
                                    type: 'vbox',
                                    align: 'stretch'
                                },
                                items: [
                                    me.processSiteMaintain({
                                        xtype: 'button',
                                        itemId: 'siteMaintain',
                                        ui: 'default-medium',
                                        scale: 'medium',
                                        text: 'Site Maintain',
                                        listeners: {
                                            click: 'onSiteMaintainClick'
                                        }
                                    })
                                ]
                            })
                        ]
                    },
                    {
                        xtype: 'panel',
                        region: 'center',
                        reference: 'mainPanel',
                        itemId: 'mainPanel',
                        layout: 'fit',
                        items: [
                            {
                                xtype: 'panel',
                                html: '<div align="center" style="color:grey;font-size:25px;font-family:sans-serif;line-height:150px;">wellcome</div>',
                                itemId: 'wellcome',
                                layout: 'fit',
                                title: '目前位置：管理首頁'
                            }
                        ]
                    },
                    {
                        xtype: 'panel',
                        region: 'north',
                        height: 40,
                        html: '<header>\n<div id="username" align="right" style="color:grey;font-size:14px;font-family:sans-serif;font-weight:bold;line-height:40px;margin-right:150px" >Guan-Yin</div>\n</header>',
                        itemId: 'northPanel',
                        layout: {
                            type: 'hbox',
                            align: 'middle',
                            pack: 'end'
                        },
                        items: [
                            {
                                xtype: 'button',
                                margin: '0px 60px',
                                text: 'Logout',
                                listeners: {
                                    click: 'onButtonClick'
                                }
                            }
                        ]
                    },
                    {
                        xtype: 'panel',
                        region: 'south',
                        height: 38,
                        itemId: 'southPanel'
                    }
                ]
            };
        if (instanceConfig) {
            me.getConfigurator().merge(me, config, instanceConfig);
        }
        return me.callParent([config]);
    },

    processSiteMaintain: function(config) {
        config.text=Utilities.getMsg('mainContainer.siteMaintain.label');
        return config;
    },

    processBasicDataMaintain: function(config) {
        config.title=Utilities.getMsg('mainContainer.basicDataMaintain.label');
        return config;
    }

});