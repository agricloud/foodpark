/*
 * File: app/view/SiteView.js
 *
 * This file was generated by Sencha Architect version 3.5.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('foodpark.view.SiteView', {
    extend: 'Ext.panel.Panel',
    alias: 'widget.siteview',

    requires: [
        'foodpark.view.SiteViewViewModel',
        'foodpark.view.SiteViewViewController',
        'foodpark.view.CommonIndexToolbar',
        'foodpark.view.CommonShowToolbar',
        'Ext.grid.Panel',
        'Ext.grid.column.Column',
        'Ext.toolbar.Paging',
        'Ext.form.Panel',
        'Ext.form.field.Number'
    ],

    controller: 'siteview',
    viewModel: {
        type: 'siteview'
    },
    layout: 'card',

    initConfig: function(instanceConfig) {
        var me = this,
            config = {
                items: [
                    {
                        xtype: 'panel',
                        itemId: 'index',
                        layout: {
                            type: 'vbox',
                            align: 'stretch'
                        },
                        dockedItems: [
                            {
                                xtype: 'commonindextoolbar',
                                dock: 'top'
                            }
                        ],
                        items: [
                            me.processGrid({
                                xtype: 'gridpanel',
                                flex: 1,
                                itemId: 'grid',
                                store: 'SiteStore',
                                columns: [
                                    {
                                        xtype: 'gridcolumn',
                                        dataIndex: 'name',
                                        text: 'name',
                                        flex: 1
                                    },
                                    {
                                        xtype: 'gridcolumn',
                                        dataIndex: 'title',
                                        text: 'title',
                                        flex: 1
                                    },
                                    {
                                        xtype: 'gridcolumn',
                                        dataIndex: 'description',
                                        text: 'description',
                                        flex: 1
                                    },
                                    {
                                        xtype: 'gridcolumn',
                                        dataIndex: 'address',
                                        text: 'address',
                                        flex: 1
                                    }
                                ],
                                dockedItems: [
                                    {
                                        xtype: 'pagingtoolbar',
                                        dock: 'bottom',
                                        displayInfo: true,
                                        store: 'SiteStore'
                                    }
                                ],
                                listeners: {
                                    afterrender: 'onGridAfterRender'
                                }
                            })
                        ],
                        listeners: {
                            afterrender: 'onIndexAfterRender'
                        }
                    },
                    {
                        xtype: 'panel',
                        itemId: 'show',
                        layout: {
                            type: 'vbox',
                            align: 'stretch'
                        },
                        dockedItems: [
                            {
                                xtype: 'commonshowtoolbar',
                                dock: 'top'
                            }
                        ],
                        items: [
                            me.processForm({
                                xtype: 'form',
                                flex: 1,
                                itemId: 'form',
                                scrollable: true,
                                bodyPadding: 10,
                                layout: {
                                    type: 'vbox',
                                    align: 'stretch'
                                },
                                items: [
                                    {
                                        xtype: 'numberfield',
                                        hidden: true,
                                        fieldLabel: 'id',
                                        name: 'id',
                                        readOnly: true
                                    },
                                    {
                                        xtype: 'textfield',
                                        fieldLabel: 'name',
                                        name: 'name',
                                        allowOnlyWhitespace: false
                                    },
                                    {
                                        xtype: 'textfield',
                                        fieldLabel: 'title',
                                        name: 'title',
                                        allowOnlyWhitespace: false
                                    },
                                    {
                                        xtype: 'textfield',
                                        fieldLabel: 'description',
                                        name: 'description'
                                    },
                                    {
                                        xtype: 'textfield',
                                        fieldLabel: 'address',
                                        name: 'address'
                                    }
                                ]
                            })
                        ],
                        listeners: {
                            afterrender: 'onShowAfterRender'
                        }
                    }
                ]
            };
        if (instanceConfig) {
            me.getConfigurator().merge(me, config, instanceConfig);
        }
        return me.callParent([config]);
    },

    processGrid: function(config) {
        return Utilities.createFiltersFeature(Utilities.processConfigBundle(config, 'site'));
    },

    processForm: function(config) {
        return Utilities.processConfigBundle(config, 'site');
    }

});